name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install django-admin
package-job: # package job for building and publishing docker images
    runs-on: ubuntu-latest
    needs: [health-check-job] # will be fired if and only if health-check-job is passed.
    if: ${{ github.event_name == 'push' }} # will be fired if the trigger event is a push event.
    steps:
      - name: Checkout Code # checking out code.
        uses: actions/checkout@v2
      - name: Build & Publish Image # we are using a public GitHub Action to build and publish docker image to our GCR registry.
        uses: docker/build-push-action@v1
        env:
          app_name: app
        with:
          username: _json_key # default for gcr.io
          password: ${{ secrets.GKE_PASSWORD }} # service account file to be set as secret
          registry: gcr.io # gcr registry domain
          repository: ${{secrets.GKE_PROJECT}}/github-django-actions/app # GKE_PROJECT is out GCP Project id to be set as secret.
          tag_with_sha: true # this will tag our image with commit id. For example our image our be gcr.io/project-id/github-django-actions/app:sha-7865423 where 7865423 is the short sha of our commit.

    deploy-job: 
      runs-on: ubuntu-latest
      needs: [package-job] 
      if: ${{ github.event_name == 'push' }} 
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Install Helm # helm installation in our runner for deploying.
          run: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
        - name: Connect to kubernetes cluster
          run: |
            gcloud container clusters get-credentials ${{secrets.GKE_CLUSTER}} --zone ${{secrets.GKE_ZONE}} --project ${{secrets.GKE_PROJECT}}
        - name: Helm Deploy
          run: >
            helm upgrade
            --install
            --set image=${{ steps.repo.outputs.repo_name }}
            --set user=${{ secrets.DB_USER }}
            --set password=${{ secrets.DB_PASSWORD }}
            --set host=${{ secrets.DB_HOST }}
            --set port=${{ secrets.DB_PORT }}
            --set name=${{ secrets.DB_NAME }}
            --wait
            --atomic
            app
            ./k8s
        - name: Check pods 
          run: kubectl get pods
